"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[2259],{53908:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>u,default:()=>k,frontMatter:()=>p,metadata:()=>y,toc:()=>h});var n=a(87462),i=(a(67294),a(3905)),s=a(26389),r=a(94891),o=a(75190),l=a(47507),d=a(24310),c=a(63303),m=(a(75035),a(85162));const p={id:"get-random-user-random-user-id-get",title:"Get Random User",description:"Retrieve a random user from the event store.",sidebar_label:"Get Random User",hide_title:!0,hide_table_of_contents:!0,api:{tags:["User Actions"],description:"Retrieve a random user from the event store.\nThis method should be used for configuration QA purposes only.\n(i.e. select a random user and then evaluate actions\nagainst histories and label weights\nto verify proper set up.)",operationId:"get_random_user_random_user_id_get",parameters:[{required:!0,schema:{title:"Program-Id",type:"string"},name:"program-id",in:"header"}],responses:{200:{description:"Successful Response",content:{"application/json":{schema:{title:"Response Get Random User Random User Id Get",type:"string"}}}},422:{description:"Validation Error",content:{"application/json":{schema:{title:"HTTPValidationError",type:"object",properties:{detail:{title:"Detail",type:"array",items:{title:"ValidationError",required:["loc","msg","type"],type:"object",properties:{loc:{title:"Location",type:"array",items:{anyOf:[{type:"string"},{type:"integer"}]}},msg:{title:"Message",type:"string"},type:{title:"Error Type",type:"string"}}}}}}}}}},security:[{APIKeyHeader:[]}],method:"get",path:"/random/user_id",securitySchemes:{APIKeyHeader:{type:"apiKey",in:"header",name:"access_token"}},info:{title:"ActionHub.ai API",description:'\n# Introduction\n_Improve user engagement with real-time "Next Best Action" recommendations using ActionHub.ai from Lifecycle Science._\nActionHub delivers consumer action recommendations,\nmessage orchestration, and content personalization in a variety of \nmarketing and product development use cases. ActionHub uses\nanonymized event logging to optimize category and asset recommendations for any\nuser based on their own engagement history.\nThe ActionHub API provides authenticated systems with program owners access to \nthe real-time retention and engagement engine built by Lifecycle Science. \n\nOnly two API call integrations are needed to get started:\n\n1. `[POST] /events` for logging user engagement events\n1. `[GET] /users/<user_id>/actions` to retrieve user recommended actions.\n\n\nAll of the other API resources available in the ActionHub system provide optional configuration and optimization features.\nAn API Key and Program ID are necessary to access the API. Contact Lifecycle Science support to obtain.\n',termsOfService:"https://docs.actionhub.ai/terms/",contact:{name:"Darryl Kanouse",url:"https://lifecyclescience.com/",email:"darryl@lifecyclescience.com"},license:{name:"Contact Lifecycle Science",url:"https://lifecyclescience.com/"},version:"0.0.2"},postman:{name:"Get Random User",description:{content:"Retrieve a random user from the event store.\nThis method should be used for configuration QA purposes only.\n(i.e. select a random user and then evaluate actions\nagainst histories and label weights\nto verify proper set up.)",type:"text/plain"},url:{path:["random","user_id"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},key:"program-id",value:""},{key:"Accept",value:"application/json"}],method:"GET",auth:{type:"apikey",apikey:[{type:"any",value:"access_token",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"get api-method",info_path:"docs/api/actionhub-ai-api",custom_edit_url:null},u=void 0,y={unversionedId:"api/get-random-user-random-user-id-get",id:"api/get-random-user-random-user-id-get",title:"Get Random User",description:"Retrieve a random user from the event store.",source:"@site/docs/api/get-random-user-random-user-id-get.api.mdx",sourceDirName:"api",slug:"/api/get-random-user-random-user-id-get",permalink:"/docs/api/get-random-user-random-user-id-get",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-random-user-random-user-id-get",title:"Get Random User",description:"Retrieve a random user from the event store.",sidebar_label:"Get Random User",hide_title:!0,hide_table_of_contents:!0,api:{tags:["User Actions"],description:"Retrieve a random user from the event store.\nThis method should be used for configuration QA purposes only.\n(i.e. select a random user and then evaluate actions\nagainst histories and label weights\nto verify proper set up.)",operationId:"get_random_user_random_user_id_get",parameters:[{required:!0,schema:{title:"Program-Id",type:"string"},name:"program-id",in:"header"}],responses:{200:{description:"Successful Response",content:{"application/json":{schema:{title:"Response Get Random User Random User Id Get",type:"string"}}}},422:{description:"Validation Error",content:{"application/json":{schema:{title:"HTTPValidationError",type:"object",properties:{detail:{title:"Detail",type:"array",items:{title:"ValidationError",required:["loc","msg","type"],type:"object",properties:{loc:{title:"Location",type:"array",items:{anyOf:[{type:"string"},{type:"integer"}]}},msg:{title:"Message",type:"string"},type:{title:"Error Type",type:"string"}}}}}}}}}},security:[{APIKeyHeader:[]}],method:"get",path:"/random/user_id",securitySchemes:{APIKeyHeader:{type:"apiKey",in:"header",name:"access_token"}},info:{title:"ActionHub.ai API",description:'\n# Introduction\n_Improve user engagement with real-time "Next Best Action" recommendations using ActionHub.ai from Lifecycle Science._\nActionHub delivers consumer action recommendations,\nmessage orchestration, and content personalization in a variety of \nmarketing and product development use cases. ActionHub uses\nanonymized event logging to optimize category and asset recommendations for any\nuser based on their own engagement history.\nThe ActionHub API provides authenticated systems with program owners access to \nthe real-time retention and engagement engine built by Lifecycle Science. \n\nOnly two API call integrations are needed to get started:\n\n1. `[POST] /events` for logging user engagement events\n1. `[GET] /users/<user_id>/actions` to retrieve user recommended actions.\n\n\nAll of the other API resources available in the ActionHub system provide optional configuration and optimization features.\nAn API Key and Program ID are necessary to access the API. Contact Lifecycle Science support to obtain.\n',termsOfService:"https://docs.actionhub.ai/terms/",contact:{name:"Darryl Kanouse",url:"https://lifecyclescience.com/",email:"darryl@lifecyclescience.com"},license:{name:"Contact Lifecycle Science",url:"https://lifecyclescience.com/"},version:"0.0.2"},postman:{name:"Get Random User",description:{content:"Retrieve a random user from the event store.\nThis method should be used for configuration QA purposes only.\n(i.e. select a random user and then evaluate actions\nagainst histories and label weights\nto verify proper set up.)",type:"text/plain"},url:{path:["random","user_id"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},key:"program-id",value:""},{key:"Accept",value:"application/json"}],method:"GET",auth:{type:"apikey",apikey:[{type:"any",value:"access_token",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"get api-method",info_path:"docs/api/actionhub-ai-api",custom_edit_url:null},sidebar:"actionHubApi",previous:{title:"Get User Events Log",permalink:"/docs/api/get-user-events-log-users-user-id-events-get"},next:{title:"Asset Administration",permalink:"/docs/api/asset-administration"}},g={},h=[{value:"Get Random User",id:"get-random-user",level:2}],v={toc:h};function k(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"get-random-user"},"Get Random User"),(0,i.kt)("p",null,"Retrieve a random user from the event store.\nThis method should be used for configuration QA purposes only.\n(i.e. select a random user and then evaluate actions\nagainst histories and label weights\nto verify proper set up.)"),(0,i.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"Header Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(o.Z,{className:"paramsItem",param:{required:!0,schema:{title:"Program-Id",type:"string"},name:"program-id",in:"header"},mdxType:"ParamsItem"})))),(0,i.kt)("div",null,(0,i.kt)(s.Z,{mdxType:"ApiTabs"},(0,i.kt)(m.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Successful Response")),(0,i.kt)("div",null,(0,i.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(c.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"string"))))))))))),(0,i.kt)(m.Z,{label:"422",value:"422",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Validation Error")),(0,i.kt)("div",null,(0,i.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(c.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"detail"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"loc"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)("span",{className:"badge badge--info"},"anyOf"),(0,i.kt)(c.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"MOD1",value:"0-item-properties",mdxType:"TabItem"},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"string")))),(0,i.kt)(m.Z,{label:"MOD2",value:"1-item-properties",mdxType:"TabItem"},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"integer")))))))))),(0,i.kt)(d.Z,{collapsible:!1,name:"msg",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"Message",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"Error Type",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,i.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "detail": [\n    {\n      "loc": [\n        "string",\n        0\n      ],\n      "msg": "string",\n      "type": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}k.isMDXComponent=!0}}]);